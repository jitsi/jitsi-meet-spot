/**
 * In this file is placeholder CSS, used until designs are received. No CSS to
 * be used on the final product should be included here.
 */

.admin {
    background-color: var(--container-bg-color);
    border-radius: 25px;
    color: var(--container-sub-content-font-color);
    height: auto;
    justify-content: center;
    max-height: 100%;
    overflow: auto;
    padding: 16px 32px;
    width: 50%;
}

.admin-container {
  margin: 20px 0;
  padding: 10px;
  word-wrap: break-word;
}

.admin-detail {
  margin-bottom: 5px;
}

.admin-hidden {
  opacity: 0;
  pointer-events: none;
}

.admin-title {
  font-size: 2em;
  margin-bottom: 5px;
}

.info-footer {
    background: rgba(0, 0, 0, 0.3);
    bottom: 0;
    display: flex;
    font-size: 1rem;
    justify-content: flex-end;
    padding: 10px;
    position: fixed;
    white-space: pre;
    width: 100%;
    z-index: $z-index-foreground;

    pointer-events: none;

    .join-info {
        pointer-events: all
    }
}

@keyframes animateDots {
  0% { opacity: 0; }
  50% { opacity: 1; }
  60% { opacity: 1; }
  100% { opacity: 0; }
}

.loading-icon {
    text-align: center;
}

.loading-icon > div {
    animation: animateDots 2.5s ease-in-out infinite;
    display: inline-block;
    font-size: 3.5em;
    opacity: 0;
}

.loading-icon > div:nth-child(2) {
    animation-delay: 0.2s;
}

.loading-icon > div:nth-child(3) {
    animation-delay: 0.4s;
}

.loading-icon > div:nth-child(4) {
    animation-delay: 0.6s;
}

.meeting-frame {
  /**
   * The background color matching jitsi-meet is used to intentionally hide
   * rendering issues of the meeting's large video disappearing and thereby
   * flashing the Spot background.
   */
  background: rgb(27, 38, 56);
  height: 100%;
  width: 100%;
}

body.using-mouse :focus {
  outline: none;
}

.container {
  align-items: center;
  border-radius: 5%;
  display: flex;
  flex-direction: column;
  height: 90%;
  justify-content: center;
  padding: 25px;
  width: 50%;
}

.loading {
    @include centered-content;

    min-height: 100vh;
    width: 100%;
}

.subcontent {
  width: 100%;
}

/**
* view acts as the main wrapper each individual route. By default put the
* content of view in the center of the screen.
*/
.view {
  background-size: cover;
  min-height: 100vh;
  width: 100%;
}

.view-background-container {
    background-position: center;
    background-size: cover;
    height: 100vh;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100vw;
}

.view-content-container {
    height: 100vh;
    overflow: auto;
    position: relative;
    width: 100vw;

    .view-content-center {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100%;
    }
}

.view-gradient {
  align-items: center;
  background-size: cover;
  display: flex;
  min-height: 100vh;
  justify-content: center;
  width: 100%;
}

.view-gradient.visible {
  background-image: linear-gradient(to bottom, #020f1b, rgba(0, 0, 0, 0) 30%), linear-gradient(to bottom, rgba(2, 15, 27, 0) 50%, #020f1b);
  flex-grow: 1;
}

.app {
  min-height: 100vh;
}
